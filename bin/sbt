#!/bin/bash

#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# This script launches sbt for this project. If present it uses the system
# version of sbt. If there is no system version of sbt it attempts to download
# sbt locally.
script_dir=$(readlink -f $(dirname ${0}))
project_dir="${script_dir}/.."

SBT_VERSION=$(awk -F "=" '{print $2}' ${project_dir}/project/build.properties)
URL1="http://repo.typesafe.com/typesafe/ivy-releases/org.scala-sbt/sbt-launch/0.13.7/sbt-launch.jar"
URL2="http://typesafe.artifactoryonline.com/typesafe/ivy-releases/org.scala-sbt/sbt-launch/${SBT_VERSION}/sbt-launch.jar"
JAR="${script_dir}/sbt-launch-${SBT_VERSION}.jar"

echo -e "SBT_VERSION: ${SBT_VERSION}"
echo -e "URL1: ${URL1}"
echo -e "URL2: ${URL2}"
# Download sbt launch jar if it hasn't been downloaded yet
if [ ! -f ${JAR} ]; then
  # Download
  printf "Attempting to fetch sbt\n"
  if hash wget 2>/dev/null; then
    wget --progress=bar "${URL1}" -O "${JAR}" || wget --progress=bar "${URL2}" -O "${JAR}"
#  elif hash curl 2>/dev/null; then
#    curl --progress-bar "${URL1}" > "${JAR}" || curl --progress-bar "${URL2}" > "${JAR}" 
  else
#    printf "You do not have curl or wget installed, please install sbt manually from http://www.scala-sbt.org/\n"
    printf "You do not have wget installed, please install sbt manually from http://www.scala-sbt.org/\n"
    exit -1
  fi
fi
if [ ! -f ${JAR} ]; then
  # We failed to download
  printf "Our attempt to download sbt locally to ${JAR} failed. Please install sbt manually from http://www.scala-sbt.org/\n"
  exit -1
fi

#! /bin/bash
NOFORMAT="false"
if [ "${1}" == "NOFORMAT" ]; then
   NOFORMAT="true"
   shift
fi

printf "Loading cluster-sim-env.sh...\n"
if [[ -f ${project_dir}/conf/cluster-sim-env.sh ]]; then
  source ${project_dir}/conf/cluster-sim-env.sh #Sets up JAVA_OPTS env variable
fi

printf "Launching sbt from ${JAR}\n"
#java -Xmx1200m -XX:MaxPermSize=350m -XX:ReservedCodeCacheSize=256m -jar ${JAR} "$@"
java -Dsbt.log.noformat=${NOFORMAT} ${JAVA_OPTS} -jar ${JAR} "$@"
